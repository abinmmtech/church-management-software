-- ==================================================================================================================================================================
-- ==================================================================================================================================================================
-- ==================================================================================================================================================================
-- ==================================================================================================================================================================

For login users:

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    username VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    password_hint VARCHAR(255) NOT NULL,
    mobile VARCHAR(10) NOT NULL,
    email VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Add triggers to update the updated_at field automatically
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER set_updated_at
BEFORE UPDATE ON users
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();

-- Optional indexes for faster searches
CREATE INDEX idx_users_mobile ON users (mobile);
CREATE INDEX idx_users_email ON users (email);




GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO church_admin;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO church_admin;

SELECT * FROM users;
-- ==================================================================================================================================================================
-- ==================================================================================================================================================================
-- ==================================================================================================================================================================
-- ==================================================================================================================================================================

Can execute together:
-- ================================
-- Table 1: Families (Family Unit)
-- ================================

CREATE TABLE families (
    id SERIAL PRIMARY KEY, -- Unique family ID (auto-increment)
    church_id INTEGER NOT NULL, -- Church ID (required)
    association_id INTEGER, -- Association ID (optional)
    address TEXT NOT NULL, -- Address (required)
    pincode INTEGER NOT NULL, -- PINCODE (required)
    kudumba_unit TEXT NOT NULL, -- Kudumba Unit (required)
    ward_number TEXT, -- Ward number (optional)
    house_number TEXT, -- House number (optional)
    hof_member_id INTEGER, -- Points to the HOF in family_members (used for HOF replacement)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp of record creation
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Timestamp of last update
);

-- ================================
-- Table 2: Family Members (Individuals)
-- ================================

CREATE TABLE family_members (
    id SERIAL PRIMARY KEY, -- Unique member ID (auto-increment)
    family_id INTEGER NOT NULL REFERENCES families(id) ON DELETE CASCADE, -- Link to families table
    name TEXT NOT NULL, -- Member Name
    church_id INTEGER NOT NULL, -- Church ID (carried from HOF)
    association_id INTEGER, -- Association ID (carried from HOF)
    mobile BIGINT NOT NULL, -- Mobile number
    address TEXT NOT NULL, -- Address (carried from HOF)
    pincode INTEGER NOT NULL, -- PINCODE (carried from HOF)
    kudumba_unit TEXT NOT NULL, -- Kudumba Unit (carried from HOF)
    ward_number TEXT, -- Ward number (carried from HOF)
    house_number TEXT, -- House number (carried from HOF)
    gender VARCHAR(10) NOT NULL, -- Gender
    dob DATE NOT NULL, -- Date of Birth
    age INTEGER NOT NULL, -- Age (calculated during entry)
    relation TEXT NOT NULL DEFAULT 'HOF', -- Relation to HOF ("HOF" for Head of Family, others for members)
    marital_status TEXT NOT NULL, -- Marital Status
    date_of_marriage DATE, -- Date of Marriage (optional)
    baptism_name TEXT, -- Baptism Name (optional)
    date_of_baptism DATE, -- Date of Baptism (optional)
    aadhar BIGINT, -- Aadhar number (optional)
    email TEXT, -- Email address (optional)
    education TEXT, -- Education details (optional)
    profession TEXT, -- Profession details (optional)
    blood_group TEXT, -- Blood Group (optional)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp of record creation
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Timestamp of last update
);

-- ================================
-- Optional: To keep data up to date, let's add triggers for updated_at
-- ================================

-- Trigger function to update the updated_at field
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
   NEW.updated_at = now();
   RETURN NEW;
END;
$$ language 'plpgsql';

-- Add trigger to families table
CREATE TRIGGER update_families_updated_at
BEFORE UPDATE ON families
FOR EACH ROW
EXECUTE PROCEDURE update_updated_at_column();

-- Add trigger to family_members table
CREATE TRIGGER update_family_members_updated_at
BEFORE UPDATE ON family_members
FOR EACH ROW
EXECUTE PROCEDURE update_updated_at_column();

-- ==================================================================================================================================================================
-- ==================================================================================================================================================================
-- ==================================================================================================================================================================
-- ==================================================================================================================================================================